<?php

namespace Diff\UserBundle\Entity;

use Symfony\Component\Security\Core\User\UserInterface;
use Doctrine\ORM\Mapping as ORM;

/**
 * User
 *
 * @ORM\Table(name="user", uniqueConstraints={@ORM\UniqueConstraint(name="userName", columns={"userName"}), @ORM\UniqueConstraint(name="email", columns={"email"})})
 * @ORM\Entity
 */
class User implements UserInterface
{
    /**
     * @var integer
     *
     * @ORM\Column(name="ID", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="userName", type="string", length=40, nullable=false)
     */
    private $username;

    /**
     * @var string
     *
     * @ORM\Column(name="password", type="string", length=260, nullable=false)
     */
    private $password;

    /**
     * @var string
     *
     * @ORM\Column(name="firstName", type="text", nullable=false)
     */
    private $firstname;

    /**
     * @var string
     *
     * @ORM\Column(name="lastName", type="text", nullable=false)
     */
    private $lastname;

    /**
     * @var string
     *
     * @ORM\Column(name="role", type="string", length=6, nullable=false)
     */
    private $role;

    /**
     * @var string
     *
     * @ORM\Column(name="email", type="string", length=60, nullable=false)
     */
    private $email;

     /**
     * @var string
     *
     * @ORM\Column(name="tel", type="text", nullable=false)
     */
    private $tel;
asd
    /**
     * @var string
     *
     * @ORM\Column(name="university", type="text", nullable=false)
     */
    private $university;
	
    public function getRole( )
    {
        return $this -> role;
    }

	public function getId( )
	{
		return $this -> id;
	}
	
	public function getRoles( )
	{
		return array( 'ROLE_'.$this -> role );
	}
	
	public function getSalt( )
	{
		return NULL;
	}
	
	public function getUsername( )
	{
		return $this -> username;
	}
	
	public function getPassword( )
	{
		return $this -> password;
	}
	
	public function eraseCredentials( )
	{
		
	}
	
}
